#include<stdio.h>
#include<stdlib.h>

typedef union z z;
typedef char ch;
typedef unsigned char uc;
typedef signed char sc;
typedef short sh;
typedef unsigned short us;
typedef signed short ss;
typedef int in;
typedef unsigned int ui;
typedef signed int si;
typedef long lo;
typedef unsigned long ul;
typedef signed long sl;
typedef long long ll;
typedef unsigned long long ull;
typedef signed long long sll;
typedef float fl;
typedef double db;
typedef long double ld;
typedef z *p;
typedef z (*f0)();
typedef z (*f1)(z);
typedef z (*f2)(z,z);
typedef z (*f3)(z,z,z);
typedef z (*f4)(z,z,z,z);
typedef z (*f5)(z,z,z,z,z);
typedef z (*f6)(z,z,z,z,z,z);
typedef z (*f7)(z,z,z,z,z,z,z);
typedef z (*f8)(z,z,z,z,z,z,z,z);
typedef z (*f9)(z,z,z,z,z,z,z,z,z);
typedef z (*f10)(z,z,z,z,z,z,z,z,z,z);
typedef z (*f11)(z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f12)(z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f13)(z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f14)(z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f15)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f16)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f17)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f18)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f19)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
typedef z (*f20)(z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z);
union z{ch ch;uc uc;sc sc;sh sh;us us;ss ss;in in;ui ui;si si;lo lo;ul ul;sl sl;ll ll;ull ull;sll sll;fl fl;db db;ld ld;p p;f0 f0;f1 f1;f2 f2;f3 f3;f4 f4;f5 f5;f6 f6;f7 f7;f8 f8;f9 f9;f10 f10;f11 f11;f12 f12;f13 f13;f14 f14;f15 f15;f16 f16;f17 f17;f18 f18;f19 f19;f20 f20;};
const ull allocationBlockSize=1024;

z n()
{
  z result;
  result.p=(p)malloc((allocationBlockSize+1)*sizeof(z));
  result.p=result.p+allocationBlockSize;
  result.p[0].ull=0;
  return result;
}

z e(z one)
{
  return one.p[0];
}

void f(z one)
{
  ull size=allocationBlockSize*(e(one).ull/allocationBlockSize+1);
  one.p-=size-e(one).ull;
  free(one.p);
}

z identity(z one)
{
  return one;
}

int main()
{
  z v;
  z fu;
  z array;

  v.uc='R';
  fu.f1=&identity;
  v=fu.f1(v);
  printf("%c\n",v.uc);
  printf("%d\n",sizeof(z));
  printf("%d\n",sizeof(char));

  array=n();
  v=e(array);
  printf("%llu\n",v.ull);
  f(array);

  return 0;
}
